{"version":3,"sources":["webpack:///./src/app/services/auth.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAA2C;AACsC;AACnC;AACF;AAIO;AACJ;AAK/C;IAIE,uEAAuE;IAEvE,qBACU,IAAgB,EAChB,cAA8B,EAC9B,YAA0B;QAF1B,SAAI,GAAJ,IAAI,CAAY;QAChB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAc;QARpC,uCAAuC;QACvC,wEAAwE;QAChE,WAAM,GAAG,kDAAkD,CAAC;IAOhE,CAAC;IAEL,gCAAU,GAAV,UAAW,GAAW,EAAE,KAAa;QACnC,IAAM,IAAI,GAAG;YACX,GAAG,EAAE,GAAG;YACR,KAAK,EAAE,KAAK;SACb,CAAC;QACF,4DAA4D;QAC5D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,KAAG,IAAI,CAAC,MAAQ,EAAE,IAAI,CAAC;aACjD,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,mCAAa,GAAb,UAAe,GAAQ,EAAE,KAAa;QACpC,IAAM,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QACvE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,IAAI,CAAC,MAAM,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC;aAC3D,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACtC,CAAC;IAED,0BAAI,GAAJ;QACE,gBAAgB;QAChB,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;QACjC,IAAI,CAAC,cAAc,CAAC,oBAAoB,EAAE,CAAC;QAC3C,OAAO;IACT,CAAC;IAEO,iCAAW,GAAnB,UAAoB,KAAwB;QAC1C,IAAI,KAAK,CAAC,KAAK,YAAY,UAAU,IAAI,KAAK,CAAC,KAAK,YAAY,aAAa,EAAE;YAC7E,OAAO,uDAAU,CAAC,iCAA+B,KAAK,CAAC,MAAM,MAAG,CAAC,CAAC;SACnE;aAAM;YACL,OAAO,uDAAU,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SACxC;IACH,CAAC;IAzCU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAQgB,+DAAU;YACA,+DAAc;YAChB,2DAAY;OATzB,WAAW,CA0CvB;IAAD,kBAAC;CAAA;AA1CuB","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { environment } from '../../environments/environment';\r\nimport { Token } from '../models/token';\r\nimport { UsuarioService } from './usuario.service';\r\nimport { TokenService } from './token.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  // private apiUrl = environment.apiUrl;\r\n  // private apiUrl = 'http://192.168.80.209:3000/api/funcionarios/login';\r\n  private apiUrl = 'http://5b644de0923c0500144a27d8.mockapi.io/users';\r\n  // private apiUrl = 'http://5bd75c464fff0700136001be.mockapi.io/users';\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private usuarioService: UsuarioService,\r\n    private tokenService: TokenService\r\n  ) { }\r\n\r\n  autenticar(cpf: string, senha: string): Observable<Token> {\r\n    const body = {\r\n      cpf: cpf,\r\n      senha: senha\r\n    };\r\n    // return this.http.post<Token>(`${this.apiUrl}/auth`, body)\r\n    return this.http.post<Token>(`${this.apiUrl}`, body)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getAutenticar (cpf: any, senha: string): Observable<Token> {\r\n    const params = new HttpParams().set('cpf', cpf).append('senha', senha);\r\n    return this.http.get<Token>(this.apiUrl, { params: params })\r\n    .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  sair(): Observable<any> {\r\n    // Em construção\r\n    this.tokenService.excluirToken();\r\n    this.usuarioService.excluirCodigoUsuario();\r\n    return;\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent || error.error instanceof ProgressEvent) {\r\n      return throwError(`Erro ao realizar o acesso. (${error.status})`);\r\n    } else {\r\n      return throwError(error.error.Message);\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}